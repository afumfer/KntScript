<stmt> := var <ident> = <expr>
	| <ident> = <expr>
	| for <ident> = <expr> to <expr> <stmt> end
	| while <expr> <stmt> end
	| foreach <ident> in <ident> <stmt> end
	| readvar <block_var>
	| if <expr> <stmt> else <stmt> end 
	| print <expr>
	| <stmt> ; <stmt>
    | <func_call>
 
<expr> := <string>
	| <int>
	| <arith_expr>
	| <ident>

<bin_expr> := <expr> <bin_op> <expr>
<bin_op> := + | - | * | /

<ident> := <char> <ident_rest>*
<ident_rest> := <char> | <digit>

<func_call> := <ident> (<args>)

' ????
<block_var> := { <block_items>}
<block_item> := <string_elem> : <ident>
<block_items> := <block_items> , <block_item>

<int> := <digit>+
<digit> := 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9

<string> := " <string_elem>* "
<string_elem> := <any char other than ">
