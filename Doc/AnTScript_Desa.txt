============================
>>>> Versión 0.0.x.x

- Implementar While (Repeat - until)
- Quitar el do al bucle for
- Implementar break dentro de los bucles
- Implementar un Read genérico (Read stringLiteral:variable, stringLiteral:variable, .... ;)
- Implementar asignaciones objeto.propiedad = expresion
- Implementar el soporte de objetos enumeradores (listas, vectores).
- Depurar ParserTree


============================
>>>> Versión 0.1.x.x
- Empotrar el código en ANotas
- Incluir los comandos de ANotas, estudiar posibles patrones para ampliar facilmente el lenguaje
- Incluir tipos de datos de ANotas (Nota, Carpeta y colecciones de Notas y Carpetas)


============================
>>>> Versión 0.2.x.x
- Implementar definición y llamadas funciones
- ¿Adaptar sintáxis y gramática al estilo C o estilo Basic?


////////////////////////////
////////////////////////////
Resueltas
////////////////////////////
////////////////////////////

============================
>>>> Versión 0.0.0.1
X- Estudiar código de ejemplo
X- Sustituir el compilador por el intérprete
X- Implementar comentarios
X- Soportar números de punto flotante
X- Enriquecer Tokens

X- Que la entrada del Scanner acepte una cadena de texto.
X- En CodeRun implementar la resolución de las expresiones con factor
X- Implementar * / - en el evaluador de expresiones
X- Implementar anidamiento de paréntesis
X- Implementar operadores unarios

X- Crear repositorio
X- Aislar en un proyecto nuevo, poner un espacio de nombres.
X- Implementar precedencia de operadores

X- Organizar mejor la rutina principal del scanner (estructurar la secuencia principal)
X- Poner como tokens las palabras reservadas y los identificadores
X- Limpiar código
X- Implementar operadiores lógicos Or, And, Not

X- Implementar operadores relacionales >, >=, <, <=, !=
X- Implementar operadores entre expresiones de cadena
X- Implementar If